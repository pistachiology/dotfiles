{
  "rust-analyzer.cargo.loadOutDirsFromCheck": true,
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.checkOnSave.enable": false,
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.checkOnSave.allTargets": false,
  "rust-analyzer.checkOnSave.extraArgs": [],
  "metals.scalafixConfigPath": "~/.config/scalafix.conf",
  "elixir.pathToElixirLS": "~/.elixir-ls/release/language_server.sh",
  "coc.preferences.formatOnSaveFiletypes": [
    "css",
    "html",
    "javascript",
    "javascript.jsx",
    "typescript",
    "typescript.tsx",
    "typescriptreact",
    "rust",
    "elixir",
    "c",
    "cpp",
    "scala"
  ],
  "suggest.timeout": 5000,
  "languageserver": {
    "elmLS": {
      "command": "elm-language-server",
      "filetypes": ["elm"],
      "rootPatterns": ["elm.json"],
      "initializationOptions": {
        "elmPath": "elm",
        "elmFormatPath": "elm-format",
        "elmTestPath": "elm-test",
        "elmAnalyseTrigger": "change"
      }
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"],
      "filetypes": ["go"],
      "initializationOptions": {
        "usePlaceholders": true
      }
    },
    "terraform": {
        "command": "terraform-lsp",
        "filetypes": [
            "terraform",
            "tf"
        ],
        "initializationOptions": {},
        "settings": {}
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
      "filetypes": ["haskell", "lhaskell"],
      "initializationOptions": {
          "languageServerHaskell": {
              "formattingProvider": "brittany"
          }
      },
      "settings": {}
    },

    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "objc", "objcpp"],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cache": {
          "directory": ".ccls-cache"
        },
        "client": {
          "snippetSupport": true
        }
      }
    }
  }
}
