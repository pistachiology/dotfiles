# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.

#
##
### i3 styles :)
##
#


# swap window
mod - h : yabai -m window --warp west
mod - j : yabai -m window --warp north
mod - k : yabai -m window --warp next
mod - l : yabai -m window --warp east

# move window
shift + mod - h : yabai -m window --warp west
shift + mod - j : yabai -m window --warp north
shift + mod - k : yabai -m window --warp next
shift + mod - l : yabai -m window --warp east

# swap window
mod - return : yabai -m window --swap west # swap with "main" tile (simply swap it west)

mod - 2 : yabai -m space --focus 1
mod - 4 : yabai -m space --focus 2
mod - 6 : yabai -m space --focus 3
mod - 8 : yabai -m space --focus 4
mod - 0 : yabai -m space --focus 5
mod - 1 : yabai -m space --focus 6

# send window to desktop and follow focus
shift + mod - 2 : yabai -m window --space 1
shift + mod - 4 : yabai -m window --space 2
shift + mod - 6 : yabai -m window --space 3
shift + mod - 8 : yabai -m window --space 4
shift + mod - 0 : yabai -m window --space 5
shift + mod - 1 : yabai -m window --space 6

# mode resize
# toggle window fullscreen zoom
mod - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
mod + shift - s : yabai -m window --toggle split

# float / unfloat window and center on screen
mod - t : yabai -m window --toggle float; \
          yabai -m window --grid 4:4:1:1:2:2; \
          yabai -m window --toggle topmost

# toggle sticky, topmost and resize to picture-in-picture size
mod - s : yabai -m window --toggle sticky; \
          yabai -m window --toggle topmost; \
          yabai -m window --grid 5:5:4:0:1:1


mod - w : yabai -m display --focus 2
mod - e : yabai -m display --focus 1
mod + shift - w : yabai -m window --display 2 && yabai -m display --focus 2
mod + shift - e : yabai -m window --display 1 && yabai -m display --focus 1


# toggle sticky, float and resize to picture-in-picture size
mod - p : yabai -m window --toggle sticky; \
          yabai -m window --toggle topmost; \
           yabai -m window --grid 5:5:4:0:1:1



# defines a new mode 'resize' with an on_enter command, that captures keypresses
:: resize @ : yabai -m config active_window_opacity 1; yabai -m config normal_window_opacity 0.9;

# from 'default' mode, activate mode 'resize'
mod + r ; resize

# from 'resize' mode, activate mode 'default'
# (this is the keypress required to leave resize mode)
resize < escape ; default
resize < r ; default

# equalize windows
resize < 0 : yabai -m space --balance

# increase window size
resize < left : yabai -m window --resize left:-25:0
resize < down : yabai -m window --resize bottom:0:25
resize < up : yabai -m window --resize top:0:-25
resize < right : yabai -m window --resize right:25:0

resize < h : yabai -m window --resize left:-25:0
resize < j : yabai -m window --resize bottom:0:25
resize < k : yabai -m window --resize top:0:-25
resize < l : yabai -m window --resize right:25:0


# increase window size
# shift + mod - a : yabai -m window --resize left:-20:0
# shift + mod - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20

# toggle sticky(+float), topmost, picture-in-picture
# mod - p : yabai -m window --toggle sticky;\
#           yabai -m window --toggle topmost;\
#           yabai -m window --toggle pip

